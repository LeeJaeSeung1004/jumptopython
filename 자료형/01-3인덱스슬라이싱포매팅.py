# 문자열 인덱싱과 슬라이싱


# 문자열 인덱싱

a = "Life is too short, You need Python"

# Life is too short, You need Python

# 문자열에서 L은 첫 번째 자리를 뜻하는 숫자 0, 바로 다음인 i는 1 이런 식으로 계속 번호를 붙인 것이다.
# 중간에 있는 short의 s는 12가 된다.

a = "Life is too short, You need Python"
a[3]

#a[3]이 뜻하는것은 문자열의 네번째문자 e이다

# 예를 들면
a[12]
's'
a[-1]
'n'
# 마이너스는 뒤에서부터 숫자만큼 세는것이다


# 문자열 슬라이싱

# 문자열에서 단어를 뽑아내려면
a = "Life is too short, You need Python"
a[0:4]
# a[0:4]가 의미하는건 a[이상:미만:간격]이다
# 공백도 문자로 인식하고 비워놓으면 0으로 판정한다


#문자열 포매팅

#문자열 포매팅이란 문자열 안의 특정한 값을 바꿔야 할 경우가 있을 때
#특정값만 바꾸는것 이 바로 문자열 포매팅 기법이다.

# 1.숫자 바로 대입
"I eat %d apples." %3
'I eat 3 apples.'
#문자열 안에 숫자를 넣고 싶은 자리에 %d를 넣어주고 
# 삽입할 숫자를 문자열밖에 %를 쓰고 그뒤에 넣는다
#%d는 문자열 포맷 코드라고 한다

#2. 문자열 바로 대입
"I eat %s apples." %"five"
'I eat five apples.'
#문자열 안에 문자열을 넣고 싶은자리에 %s를 넣고
#삽입할 문자열을 문자열밖에 %를 쓰고 그뒤에 넣는다

#3. 숫자값을 나타내는 변수로 대입
number = 3
"I eat %d apples." %number
'I eat 3 apples'
#1번처럼 숫자를 바로 대입하지만 숫자값대신 변수를 대입한다

#4. 2개이상의 값넣기
number = 10
day = "three"
"I ate %s apples. so I was sick for %s days." %(number,day)
print("I ate %d apples. so I was sick for %s days." %(number,day))

# 포맷 코드와 숫자 함께 사용하기

#1. 정렬과 공백
"%10s" %"hi"
'        hi'
#%10s는 전체길이가 10인 문자열에서 대입되는값을 오른쪽으로 정렬하고
# 그앞의 나머지는 공백으로 남기는 것이다
#반대쪽 왼쪽정렬
"%-10sjane." %"hi"
'hi      jane.'
#hi를 왼쪽정렬후 나머지 공백으로 채운후 jane을 붙였다

#2. 소수점 표현하기
"%0.4f" % 13.42134234
#"%0.4f"는 소수를 소수점 4번째자리까지만 표시하는것이고
#소수점 앞의 숫자는 전체길이를 나타낸다

#format함수를 사용한 포매팅

#숫자 바로 대입하기
"eat {0} apples.".format(3)
'I eat 3 apples'

#문자열 바로 대입하기
"I eat {0} apples".format("five")
'I eat five apples'

#숫자값을 가진 변수로 대입하기
number = 3
"I eat {0} apples".format(number)
'I eat 3 apples'

#2개 이상의 값 넣기
number = 10
day = "three"
"I ate {0} apples. so I was sick for {1} days.".format(number,day)
'I ate 10 apples. so I was sick for three days.'
#2개이상의 값을 넣을때 문자열의 {0},{1}에 
# format함수의 입력값에 순서에 맞게 바뀐다

#왼쪽 정렬

"{0:<10}".format("hi")
'hi        '
# :<10 표현식을 사용하면 치환되는 문자열을 왼쪽으로 정렬하고
# 문자열의 총 자릿수를 10으로 맞출 수 있다.
#오른쪽은 :<대신 :>을 사용하면된다
#가운데 정렬은 :^을 사용한다

#공백채우기
"{0:=^10}".format("hi")
'====hi===='
#정렬할 때 공백 문자 대신에 지정한 문자 값으로 넣으려면
#채워 넣을 문자 값은 정렬 문자 <, >, ^ 바로 앞에 넣어야 한다.

#소수점 표현하기

y = 3.42134234
"{0:0.4f}".format(y)
'3.4213'
# format 함수를 사용해 소수점을 4자리까지만 표현하는 방법
# 앞에서 살펴보았던 표현식 0.4f를 그대로 사용한 것을 알 수 있다.

#{ 또는 } 문자 표현하기

"{{ and }}".format()
'{ and }'
# format 함수를 사용해 문자열 포매팅을 할 경우 { }와 같은 중괄호(brace) 문자를 
# 포매팅 문자가 아닌 문자 그대로 사용하고 싶은 경우에는 {{ }}처럼 2개를 연속해서 사용하면 된다.

# f 문자열 포매팅
# 파이썬 3.6 버전부터는 f 문자열 포매팅 기능을 사용할 수 있다.

# 다음과 같이 문자열 앞에 f 접두사를 붙이면 f 문자열 포매팅 기능을 사용할 수 있다.

name = '홍길동'
age = 30
f'나의 이름은 {name}입니다. 나이는 {age}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'

# f 문자열 포매팅은 위와 같이 name, age와 같은 변수 값을 생성한 후에 그 값을 참조할 수 있다.
# 또한 f 문자열 포매팅은 표현식을 지원한다

# 표현식이란 문자열 안에서 변수와 +, -와 같은 수식을 함께 사용하는 것을 말한다.

age = 30
f'나는 내년이면 {age+1}살이 된다.'
'나는 내년이면 31살이 된다.'

# 딕셔너리는 f 문자열 포매팅에서 다음과 같이 사용할 수 있다.

# 딕셔너리는 Key와 Value라는 것을 한 쌍으로 갖는 자료형이다.

d = {'name':'홍길동', 'age':30}
f'나의 이름은 {d["name"]}입니다. 나이는 {d["age"]}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'

#정렬은 다음과 같이 할 수 있다.

f'{"hi":<10}'
#공백 채우기는 다음과 같이 할 수 있다.

f'{"hi":=^10}'
#소수점은 다음과 같이 표현할 수 있다.

y = 3.42134234
f'{y:10.4f}'  # 소수점 4자리까지 표현하고 총 자리수를 10으로 맞춤

#f 문자열에서 { } 문자를 표시하려면 다음과 같이 두 개를 동시에 사용해야 한다.
f'{{ and }}'