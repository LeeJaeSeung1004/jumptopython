# 집합만들기

# 집합자료형은 set키워드를 사용해 만들수 있다
s1 = set([1,2,3])
s2 = set("Hello")
#set(리스트)처럼 만들거나 set(문자열)을 입력해 만든다
#비어있는 집합 자료형은
#s = set()으로 만들수 있다

# 집합자료형의 특징
# 집합자료형은 중복을 허용하지 않고 순서가 없다
# 리스트나 튜플은 순서가 있기 때문에 인덱싱을 통해 값을 얻을수 있지만
# set 자료형은 순서가 없어서 인덱싱으로 값을 얻을수 없다
# 딕셔너리도 인덱싱지원을 안한다
# set자료형에 저장된값을 인덱싱으로 접근하려면 리스트나 튜플로
# 변환한 뒤에 해야한다

s1 =set([1,2,3])
l1 = list(s1)
l1[0]
t1 = tuple(s1)
t1[0]
# 중복을 허용하지않는 set의 특징은 자료형의 중복을 제거하기위한 필터역할로 사용하기도 한다

#교집합 합집합 차집합구하기
#set자료형을 유용하게쓰는경우는 교집합 합집합 차집합을 구할때다

s1 = set([1,2,3,4,5,6])
s2 = set([4,5,6,7,8,9])

#교집합
s1&s2
s1.intersection(s2)
#"&"기호를 이용하면 교집합을 구할수있고 intersection함수를 사용해도 동일한결과가 나온다

#합집합
#합집합은 중복된 값은 한개씩만 표시하고 "|"기호 또는 union함수를 사용한다
s1 | s2
s1.union(s2)

#차집합
#차집합은 "-"또는 difference함수를 사용해서 구할수있다
s1 - s2
s2 - s1
s1.difference(s2)
s2.difference(s1)

# 집합자료형 관련 함수

# 값 1개 추가하기 (add)
# 이미 만들어진 set자료형에 1개만 값을 추가한다
s1 = set([1,2,3])
s1.add(4)

#값 여러개 추가하기(update)
#여러개 값을 한번에 추가한다
s1 = set([1,2,3])
s1.update([4,5,6])

#특정값 제거하기(remove)
#특정값을 제거하려면 다음과 같이 하면된다
s1 = set([1, 2, 3])
s1.remove(1)